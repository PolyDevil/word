{"version":3,"sources":["components/AnimatedWord/index.js","data.js","App.js","serviceWorker.js","index.js"],"names":["staggerConfig","delayedAnimation","speed","spring","stiffness","damping","initialState","isInTransition","isSwapped","options","index","current","next","reducer","state","action","type","Array","from","length","shouldFlip","prev","AnimatedWord","id","data","placeholder","placeholderString","animate","useReducer","dispatch","useEffect","useMemo","useCallback","handleComplete","className","onClick","map","d","i","key","flipKey","decisionData","flipId","data-state","onComplete","stagger","wordList","getRandomInteger","min","max","Math","floor","random","App","useState","lastAnimated","setLastAnimated","setAnimate","interval","setInterval","int","includes","slice","clearInterval","e","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e46dc686.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useMemo, useReducer } from 'react';\nimport { Flipper, Flipped } from 'react-flip-toolkit';\nimport './style.css';\n\nconst staggerConfig = {\n  delayedAnimation: {\n    speed: 1,\n  },\n};\n\nconst spring = {\n  stiffness: 400,\n  damping: 16,\n};\n\nconst initialState = {\n  isInTransition: false,\n  isSwapped     : false,\n  options       : [],\n  index         : 0,\n  current       : [],\n  next          : [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"setOptions\": {\n      return {\n        ...state,\n        options: action.options,\n        index  : 0,\n        current: Array.from(action.options[0]),\n        next   : Array.from(action.options[1]),\n      }\n    }\n    case \"startTransition\": {\n      return {\n        ...state,\n        isInTransition: true,\n      }\n    }\n    case \"finishTransition\": {\n      return {\n        ...state,\n        isInTransition: false,\n        isSwapped     : false,\n      }\n    }\n    case \"resetTransition\": {\n      const index = (state.index + state.options.length + 1) % state.options.length;\n\n      return {\n        ...state,\n        index,\n        isSwapped: true,\n        current  : Array.from(state.options[index]),\n        next     : Array.from(state.options[(state.index + state.options.length + 2) % state.options.length]),\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nconst shouldFlip = (prev, current) => current && current !== prev;\n\nfunction AnimatedWord({\n  id,\n  data: {\n    options,\n    placeholder: placeholderString = '',\n  },\n  animate,\n}) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(\n    () => {\n      if (id === animate) {\n        dispatch({ type: 'startTransition' });\n      }\n    },\n    [id, animate]\n  );\n\n  useEffect(\n    () => dispatch({ type: 'setOptions', options }),\n    [options]\n  );\n\n  const placeholder = useMemo(\n    () => Array.from(placeholderString),\n    [placeholderString]\n  );\n\n  const next = useCallback(\n    () => {\n      if (!state.isInTransition) {\n        dispatch({ type: 'startTransition' });\n      }\n    },\n    [state.isInTransition],\n  );\n\n  const handleComplete = useCallback(\n    () => {\n      if (state.isInTransition) {\n        dispatch({ type: 'finishTransition' });\n      } else if (!state.isSwapped) {\n        dispatch({ type: 'resetTransition' });\n      }\n    },\n    [state.isInTransition, state.isSwapped],\n  );\n\n  return (\n    <div className=\"Sentence\" onClick={next}>\n      <p className=\"Placeholder\">\n        {placeholder.map((d, i) => (\n          <span key={i + d} className=\"Letter\">\n            {d}\n          </span>\n        ))}\n      </p>\n\n      <Flipper\n        flipKey={state.current + state.isInTransition}\n        decisionData={state.isInTransition}\n      >\n        <p className=\"Word\">\n          {state.current.map((d, i) => (\n            <Flipped\n              key={i + d}\n              flipId={i + d + 'current'}\n              shouldFlip={shouldFlip}\n            >\n              <del\n                className=\"Letter\"\n                data-state={state.isInTransition ? '--out' : ''}\n              >\n                {d}\n              </del>\n            </Flipped>\n          ))}\n        </p>\n      </Flipper>\n\n      <Flipper\n        flipKey={state.next + state.isInTransition}\n        decisionData={state.isInTransition}\n        staggerConfig={staggerConfig}\n        spring={spring}\n        onComplete={handleComplete}\n      >\n        <p className=\"Word\">\n          {state.next.map((d, i) => (\n            <Flipped\n              key={i + d}\n              flipId={i + d + 'next'}\n              stagger=\"delayedAnimation\"\n              shouldFlip={shouldFlip}\n            >\n              <ins\n                className=\"Letter\"\n                data-state={state.isInTransition ? '' : '--in'}\n              >\n                {d}\n              </ins>\n            </Flipped>\n          ))}\n        </p>\n      </Flipper>\n    </div>\n  );\n}\n\nexport default AnimatedWord;\n","const data = [\n  {\n    options: [\n      'cavity',\n      'parity',\n    ],\n  },\n\n  {\n    options: [\n      'ability',\n      'density',\n      'gravity',\n    ],\n  },\n\n  {\n    options: [\n      'quality',\n      'utility',\n      'activity',\n    ],\n  },\n\n  {\n    options: [\n      'capacity',\n      'facility',\n      'humidity',\n    ],\n  },\n\n  {\n    options: [\n      'insanity',\n      'majority',\n      'minority',\n    ],\n  },\n\n  {\n    options: [\n      'polarity',\n      'priority',\n      'quantity',\n    ],\n  },\n\n  {\n    options: [\n      'security',\n      'velocity',\n      'vicinity',\n    ],\n  },\n\n  {\n    options: [\n      'ambiguity',\n      'authority',\n      'community',\n      'integrity',\n    ],\n  },\n\n  {\n    options: [\n      'intensity',\n      'stability',\n      'alkalinity',\n      'capability',\n    ],\n  },\n\n  {\n    options: [\n      'continuity',\n      'disability',\n      'durability',\n    ],\n  },\n\n  {\n    options: [\n      'similarity',\n      'visibility',\n      'credibility',\n      'electricity',\n    ],\n  },\n\n  {\n    options: [\n      'eligibility',\n      'operability',\n      'opportunity',\n    ],\n  },\n\n  {\n    options: [\n      'personality',\n      'possibility',\n      'probability',\n      'reliability',\n    ],\n  },\n\n  {\n    options: [\n      'accountability',\n      'responsibility',\n      'maintainability',\n      'nonavailability',\n    ],\n  },\n\n  {\n    options: [\n      'telecommunication',\n      'decontamination',\n      'discontinuation',\n      'instrumentation',\n    ],\n  },\n\n  {\n    options: [\n      'reconfiguration',\n      'standardization',\n      'administration',\n      'classification',\n    ],\n  },\n\n  {\n    options: [\n      'discrimination',\n      'identification',\n      'implementation',\n      'multiplication',\n    ],\n  },\n\n  {\n    options: [\n      'recapitulation',\n      'recommendation',\n      'rehabilitation',\n      'specialization',\n      'transportation',\n    ],\n  },\n\n  {\n    options: [\n      'accommodation',\n      'appropriation',\n      'authorization',\n      'certification',\n      'communication',\n    ],\n  },\n\n  {\n    options: [\n      'concentration',\n      'configuration',\n      'consideration',\n      'consolidation',\n    ],\n  },\n\n  {\n    options: [\n      'contamination',\n      'demonstration',\n      'dissemination',\n      'documentation',\n    ],\n  },\n\n  {\n    options: [\n      'interrelation',\n      'investigation',\n      'participation',\n      'qualification',\n      'recombination',\n      'specification',\n      'stabilization',\n    ],\n  },\n\n  {\n    options: [\n      'abbreviation',\n      'acceleration',\n      'accumulation',\n      'anticipation',\n      'apprehension',\n      'augmentation',\n    ],\n  },\n\n  {\n    options: [\n      'commendation',\n      'compensation',\n      'condensation',\n      'constitution',\n      'construction',\n    ],\n  },\n\n  {\n    options: [\n      'contribution',\n      'coordination',\n      'distribution',\n      'facilitation',\n      'illustration',\n    ],\n  },\n\n  {\n    options: [\n      'implantation',\n      'installation',\n      'interruption',\n      'introduction',\n    ],\n  },\n\n  {\n    options: [\n      'jurisdiction',\n      'modification',\n      'organization',\n      'presentation',\n      'preservation',\n      'reproduction',\n    ],\n  },\n\n  {\n    options: [\n      'transmission',\n      'verification',\n      'acquisition',\n      'aggravation',\n      'alternation',\n      'application',\n      'calculation',\n    ],\n  },\n\n  {\n    options: [\n      'calibration',\n      'circulation',\n      'combination',\n      'competition',\n      'composition',\n    ],\n  },\n\n  {\n    options: [\n      'compression',\n      'computation',\n      'conjunction',\n      'correlation',\n      'dereliction',\n    ],\n  },\n];\n\nexport const wordList = data.map(({ options }) => ({\n  options,\n  placeholder: options[options.length - 1],\n}));\n","import React, { useState, useEffect } from 'react';\nimport AnimatedWord from 'components/AnimatedWord';\nimport './App.css';\nimport { wordList } from './data';\n\nconst getRandomInteger = (min = 0, max = 10) => Math.floor(Math.random() * max) + min;\n\nfunction App() {\n  const [lastAnimated, setLastAnimated] = useState([]);\n  const [animate, setAnimate] = useState(-1);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let int = getRandomInteger(0, wordList.length - 1);\n      while(lastAnimated.includes(int)) {\n        int = getRandomInteger(0, wordList.length - 1);\n      }\n      setAnimate(int);\n\n      if (lastAnimated.length < 3) {\n        setLastAnimated([...lastAnimated, int]);\n      } else {\n        setLastAnimated([...lastAnimated.slice(1), int]);\n      }\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, [lastAnimated]);\n\n  return (\n    <div className=\"App\">\n      {wordList.map((e, i) => (\n        <AnimatedWord key={e.placeholder} id={i} data={e} animate={animate} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}